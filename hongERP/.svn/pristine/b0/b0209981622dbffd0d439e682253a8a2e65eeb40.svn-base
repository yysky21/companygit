package com.hzg.pay;

import com.google.gson.reflect.TypeToken;
import com.hzg.erp.*;
import com.hzg.sys.User;
import com.hzg.tools.CommonConstant;
import com.hzg.tools.DateUtil;
import com.hzg.tools.ErpConstant;
import com.hzg.tools.Writer;
import org.apache.commons.io.IOUtils;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.util.List;
import java.util.Map;

/**
 * Copyright © 2012-2025 云南红掌柜珠宝有限公司 版权所有
 * 文件名: SysController.java
 *
 * @author smjie
 * @version 1.00
 * @Date 2017/3/16
 */
@Controller
@RequestMapping("/pay")
public class PayController extends com.hzg.base.Controller {

    Logger logger = Logger.getLogger(PayController.class);

    @Autowired
    private Writer writer;

    @Autowired
    private PayClient payClient;

    public PayController(PayClient payClient) {
        super(payClient);
    }

    @GetMapping("/view/{entity}/{id}")
    public String viewById(Map<String, Object> model, @PathVariable("entity") String entity, @PathVariable("id") Integer id,
                           @CookieValue(name=CommonConstant.sessionId, defaultValue = "")String sessionId) {
        logger.info("viewById start, entity:" + entity + ", id:" + id);

        List<Object> entities = null;

        String json = "{\"id\":" + id + "}";

        if (entity.equalsIgnoreCase(Pay.class.getSimpleName())) {
            entities = writer.gson.fromJson(client.query(entity, json), new TypeToken<List<Pay>>() {}.getType());

        }else if (entity.equalsIgnoreCase(Account.class.getSimpleName())) {
            entities = writer.gson.fromJson(client.query(entity, json), new TypeToken<List<Account>>() {}.getType());
        }

        User user = (User)dao.getFromRedis((String)dao.getFromRedis(CommonConstant.sessionId + CommonConstant.underline + sessionId));

        model.put("entity", entities.isEmpty() ? null : entities.get(0));
        model.put("userId", user.getId());
        logger.info("viewById end");

        return "/pay/" + entity;
    }

    /**
     * boyuanitsm 支付项目接口
     * 项目地址https://github.com/boyuanitsm/pay
     *
     *
     *  ========================= 支付接口 =======================
     */

    @RequestMapping(value = "/wechat/payResultCallback", method = RequestMethod.POST)
    public void payResultCallback(String responseString, HttpServletRequest request, HttpServletResponse response) throws IOException {
        response.getWriter().println(payClient.payResultCallback(IOUtils.toString(request.getInputStream())));
    }
}
