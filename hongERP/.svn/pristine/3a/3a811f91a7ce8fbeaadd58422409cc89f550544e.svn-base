package com.hzg.afterSaleService;

import com.hzg.order.CustomerClient;
import com.hzg.order.OrderDao;
import com.hzg.sys.Action;
import com.hzg.tools.*;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.transaction.annotation.Transactional;
import org.springframework.web.bind.annotation.*;

import javax.servlet.http.HttpServletResponse;

/**
 * Copyright © 2012-2025 云南红掌柜珠宝有限公司 版权所有
 * 文件名: ReturnProductController.java
 *
 * @author smjie
 * @version 1.00
 * @Date 2017/11/30
 */
@Controller
@RequestMapping("/returnProduct")
public class ReturnProductController {

    Logger logger = Logger.getLogger(ReturnProductController.class);

    @Autowired
    private OrderDao orderDao;

    @Autowired
    private Writer writer;

    @Autowired
    private Transcation transcation;

    @Autowired
    private DateUtil dateUtil;

    @Autowired
    CustomerClient customerClient;

    /**
     * 保存实体
     * @param response
     * @param entity
     * @param json
     */
    @Transactional
    @PostMapping("/save")
    public void save(HttpServletResponse response, String entity, @RequestBody String json){
        logger.info("save start, parameter:" + entity + ":" + json);
        String result = CommonConstant.fail;

        if (entity.equalsIgnoreCase(ReturnProduct.class.getSimpleName())) {
            ReturnProduct returnProduct = writer.gson.fromJson(json, ReturnProduct.class);

            writer.writeStringToJson(response, result) ;
        }

        logger.info("save end, result:" + result);
    }


    @Transactional
    @PostMapping("/business")
    public void business(HttpServletResponse response, String name, @RequestBody String json){
        logger.info("business start, parameter:" + name + ":" + json);

        String result = CommonConstant.fail;

        try {
            if (name.equalsIgnoreCase("")) {
                Action action = writer.gson.fromJson(json, Action.class);
            }
        } catch (Exception e) {
            e.printStackTrace();
            result += CommonConstant.fail;
        } finally {
            result = transcation.dealResult(result);
        }

        writer.writeStringToJson(response, "{\"" + CommonConstant.result + "\":\"" + result + "\"}");
        logger.info("business end, result:" + result);
    }

}
